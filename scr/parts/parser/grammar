
(1)	    PROG → CODE
(2)	    PROG → ε
(3)	    CODE → VAR_DECL '\n' CODE
(4)	    CODE → LET_DECL '\n' CODE
(5)	    CODE → FUNC_DECL '\n' CODE
(6)	    CODE → WHILE_LOOP '\n' CODE
(7)	    CODE → BRANCH '\n' CODE
(8)	    CODE → ID_CALL_OR_ASSING '\n' CODE
(9)	    CODE → RETURN '\n'
(10)	RETURN → 'return' RET_EXPR
(11)	RET_EXPR → expr
(12)	RET_EXPR → ε
(13)	VAR_DECL → 'var' id VAR_LET_TYPE VAR_LET_EXP
(14)	VAR_LET_TYPE → ':' type
(15)	VAR_LET_TYPE → ε
(16)	VAR_LET_EXP → '=' expr
(17)	VAR_LET_EXP → ε
(18)	LET_DECL → 'let' id VAR_LET_TYPE VAR_LET_EXP
(19)	FUNC_DECL → 'func' id '(' PARAM_LIST ')' FUNC_RET_TYPE '{' CODE '}' '\n'
(20)	FUNC_RET_TYPE → '->' type
(21)	FUNC_RET_TYPE → ε
(22)	PARAM_LIST → PARAM NEXT_PARAM
(23)	PARAM_LIST → ε
(24)	PARAM → PARAM_NAME id ':' type
(25)	PARAM_NAME → id
(26)	PARAM_NAME → underscore
(27)	NEXT_PARAM → ',' PARAM NEXT_PARAM
(28)	NEXT_PARAM → ε
(29)	BRANCH → 'if' BR_EXPR '{' CODE '}' 'else' '{' CODE '}'
(30)	BR_EXPR → expr
(31)	BR_EXPR → 'let' id
(32)	WHILE_LOOP → 'while' expr '{' CODE '}'
(33)	CALL_PARAM_LIST → CALL_PARAM NEXT_CALL_PARAM
(34)	CALL_PARAM_LIST → ε
(35)	CALL_PARAM → NAMED_CALL_PARAM
(36)	CALL_PARAM → POS_CALL_PARAM
(37)	NAMED_CALL_PARAM → name ':' expr
(38)	POS_CALL_PARAM → expr
(39)	NEXT_CALL_PARAM → ',' CALL_PARAM NEXT_CALL_PARAM
(40)	NEXT_CALL_PARAM → ε
(41)	ID_CALL_OR_ASSING → id NEXT_ID_CALL_OR_ASSING
(42)	NEXT_ID_CALL_OR_ASSING → '(' CALL_PARAM_LIST ')'
(43)	NEXT_ID_CALL_OR_ASSING → '=' expr